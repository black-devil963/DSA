

Given an unsorted array arr[] of size N having both negative and positive integers. The task is place all negative element at the end of array without changing the
order of positive element and negative element.
Example 1:
Input : 
N = 8
arr[] = {1, -1, 3, 2, -7, -5, 11, 6 }
Output : 
1  3  2  11  6  -1  -7  -5


//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends
class Solution{
    public:
    void segregateElements(int arr[],int n)
    {
        int i,nve=0,j,k;
        for(i=0;i<n;++i)if(arr[i]<0)++nve;
        int arrnve[nve];
        j=0;
        k=0;
        for(i=0;i<n;++i){
            if(arr[i]<0){arrnve[j]=arr[i];++j;}
            else {arr[k]=arr[i];++k;}
        }
        j=0;
        for(i=n-nve;i<n;++i){arr[i]=arrnve[j];++j;}
    }
};

//{ Driver Code Starts.
int main() {
	// your code goes here
	int t;
	cin>>t;
	while(t--)
	{
		int n;
		cin>>n;
		int a[n];
		for(int i=0;i<n;i++)
		cin>>a[i];
		Solution ob;
		ob.segregateElements(a,n);
		
        for(int i=0;i<n;i++)
        cout<<a[i]<<" ";
		cout<<endl;
	}
}

// } Driver Code Ends
